var g=Object.defineProperty;var o=(e,s)=>g(e,"name",{value:s,configurable:!0});import m from"node:module";import{MessageChannel as v}from"node:worker_threads";import{i as h}from"./register-Bx9fr_2c.mjs";import{pathToFileURL as w}from"node:url";const b=o((e,s,r)=>{const n=s.startsWith("file://")?s:w(s),a=new URL(e,n);return a.searchParams.set("tsx-namespace",r),a.toString()},"resolveSpecifier"),E=o(e=>(s,r)=>{if(!r)throw new Error("The current file path (import.meta.url) must be provided in the second argument of tsImport()");return import(b(s,r,e))},"createScopedImport");let l=!1;const M=o(e=>{if(!m.register)throw new Error(`This version of Node.js (${process.version}) does not support module.register(). Please upgrade to Node v18.19 or v20.6 and above.`);if(!l){const{_resolveFilename:t}=m;m._resolveFilename=(c,f,d,u)=>t(h(c),f,d,u),l=!0}const{sourceMapsEnabled:s}=process;process.setSourceMapsEnabled(!0);const{port1:r,port2:n}=new v;m.register(`./esm/index.mjs?${Date.now()}`,{parentURL:import.meta.url,data:{port:n,namespace:e?.namespace,tsconfig:e?.tsconfig},transferList:[n]});const a=e?.onImport,i=a&&(t=>{t.type==="load"&&a(t.url)});i&&(r.on("message",i),r.unref());const p=o(()=>(s===!1&&process.setSourceMapsEnabled(!1),i&&r.off("message",i),r.postMessage("deactivate"),new Promise(t=>{const c=o(f=>{f.type==="deactivated"&&(t(),r.off("message",c))},"onDeactivated");r.on("message",c)})),"unregister");return e?.namespace&&(p.import=E(e.namespace),p.unregister=p),p},"register");export{M as r};
